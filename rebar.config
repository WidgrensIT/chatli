%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-

{erl_opts, [debug_info]}.
{src_dirs, ["src", "src/controllers"]}.
{shell, [{config, "./config/sys.config.local"}]}.

{erlydtl_opts, [{doc_root, "src/views"},
                {recursive, true},
                {libraries, [
                             {nova_erlydtl_inventory, nova_erlydtl_inventory}
                            ]},
                {default_libraries, [nova_erlydtl_inventory]}
               ]}.

{deps, [
        {nova, ".*", {git, "https://github.com/novaframework/nova.git", {ref, "b5d03d3bdcafb51e0aa2e51ed34ae9dfe1681e7e"}}},
        {pgo, ".*", {git, "https://github.com/erleans/pgo.git", {ref, "6bbd5478ac08ae184cdd8f2331ff81fd94b66610"}}},
        {jwerl, ".*", {git, "https://github.com/Taure/jwerl.git", {ref, "5f856e7987bb65ceec1593c21a01fd9aef87abda"}}},
        {mimetypes, ".*", {git, "https://github.com/erlangpack/mimetypes.git", {ref, "091a76398319e041fab444249ae5042500f3abaa"}}}
       ]}.
{profiles, [
            {prod, [{relx, [{dev_mode, false}, {include_erts, true}]}]},
            {lint,  [
                     {plugins, [
                                {rebar3_lint, {git, "https://github.com/project-fifo/rebar3_lint.git", {tag, "0.1.11"}}}
                               ]}
                    ]},
            {test, [{deps, [{gun, "2.0.1"}]}]}
           ]}.

{xref_checks,[
              undefined_function_calls,
              undefined_functions,
              locals_not_used,
              deprecated_function_calls,
              deprecated_functions
             ]}.

{elvis,
 [#{dirs => ["src"],
    filter => "*.erl",
    rules => [{elvis_style, line_length,
               #{ignore => [],
                 limit => 180,
                 skip_comments => false}},
              {elvis_style, no_tabs},
              {elvis_style, no_trailing_whitespace},
              {elvis_style, macro_names, #{ignore => []}},
              {elvis_style, macro_module_names},
              {elvis_style, operator_spaces, #{rules => [{right, ","},
                                                         {right, "++"},
                                                         {left, "++"}]}},
              {elvis_style, nesting_level, #{level => 3}},
              {elvis_style, god_modules,
               #{limit => 25,
                 ignore => []}},
              {elvis_style, no_if_expression},
              {elvis_style, used_ignored_variable},
              {elvis_style, no_behavior_info},
              {
               elvis_style,
               module_naming_convention,
               #{regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$",
                 ignore => []}
              },
              {
               elvis_style,
               function_naming_convention,
               #{regex => "^([a-z][a-z0-9]*_?)*$"}
              },
              {elvis_style, state_record_and_type},
              {elvis_style, no_spec_with_records},
              {elvis_style, dont_repeat_yourself, #{min_complexity => 10,
                                                    ignore => [chatli_db]}},
              {elvis_style, no_debug_call, #{ignore => []}}
             ]
   },
  #{dirs => ["."],
    filter => "rebar.config",
    rules => [{elvis_project, no_deps_master_rebar, #{ignore => []}},
              {elvis_project, protocol_for_deps_rebar, #{ignore => []}}]
   }
 ]
}.

%% Release profiles
%% To create a release just run
%% rebar3 release -n chatli-prod
{relx, [{release, {chatli, "0.1.0"},
         [chatli],
         [{dev_mode, false},
          {include_erts, true},
          {extended_start_script, true}]}
       ]}.


%% Plugins for rebar3
{plugins, [
           {rebar3_erlydtl_plugin, ".*",
            {git, "https://github.com/tsloughter/rebar3_erlydtl_plugin.git", {branch, "master"}}}
          ]}.

{provider_hooks, [
                  {pre, [{compile, {erlydtl, compile}}]}
                 ]}.
